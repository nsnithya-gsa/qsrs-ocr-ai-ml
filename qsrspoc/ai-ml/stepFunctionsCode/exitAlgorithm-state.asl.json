{
  "StartAt": "Assign Vars",
  "QueryLanguage": "JSONata",
  "States": {
    "Assign Vars": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "QueryLanguage": "JSONata",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:assignVarsStepFunction:$LATEST",
        "Payload": "{% $states.input %}"
      },
      "Assign": {
        "prompts": "{% $states.result.Payload.prompts %}",
        "embeddings_key": "{% $states.result.Payload.embeddings_key %}",
        "all_page_text_file": "{% $states.result.Payload.all_page_text_file %}",
        "passed_data": "{% $states.result.Payload.passed_data %}",
        "algorithm": "{% $states.result.Payload.algorithm %}",
        "R1_response": "",
        "R2_response": "",
        "Q1_response": "",
        "Q2_response": "",
        "Q3_response": "",
        "Q4_response": "",
        "Q5_response": ""
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Extract Data Pass"
    },
    "Extract Data Pass": {
      "Type": "Pass",
      "Assign": {
        "discharge_status": "{% $passed_data.DischargeStatus %}",
        "BDeath": "{% $passed_data.BDeath %}",
        "COVID_EVENT": "{% $passed_data.COVID_EVENT %}",
        "HAP_EVENT": "{% $passed_data.HAP_EVENT %}",
        "BM_EVENT": "{% $passed_data.BM_EVENT %}",
        "BN_Event": "{% $passed_data.BN_Event %}",
        "BLOOD_EVENT": "{% $passed_data.BLOOD_EVENT %}",
        "FALL_EVENT": "{% $passed_data.FALL_EVENT %}",
        "CDI_EVENT": "{% $passed_data.CDI_EVENT %}",
        "SSI_EVENT": "{% $passed_data.SSI_EVENT %}",
        "UTI_EVENT": "{% $passed_data.UTI_EVENT %}",
        "CAUTI_EVENT": "{% $passed_data.CAUTI_EVENT %}",
        "CLABSI_EVENT": "{% $passed_data.CLABSI_EVENT %}",
        "MED_EVENT": "{% $passed_data.MED_EVENT %}",
        "PU_EVENT": "{% $passed_data.PU_EVENT %}",
        "SURG_EVENT": "{% $passed_data.SURG_EVENT %}",
        "VTE_EVENT": "{% $passed_data.VTE_EVENT %}",
        "OOI_EVENT": "{% $passed_data.OOI_EVENT %}"
      },
      "Next": "Q1"
    },
    "Q1": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q1 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q1_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q1 Choice"
    },
    "Q1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Condition": "{% $Q1_response.Answer = 'yes' %}",
          "Next": "Q2"
        }
      ],
      "Default": "R1 Choice"
    },
    "Q2": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q2 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q2_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "R1 Choice"
    },
    "R1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q3",
          "Condition": "{% $discharge_status = 'died' and $not($BDeath) %}"
        }
      ],
      "Default": "R2 Choice"
    },
    "Q3": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q3 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q3_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q3 Choice"
    },
    "Q3 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q5",
          "Condition": "{% $Q3_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Collect and Upload"
    },
    "R2 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q4",
          "Condition": "{% $COVID_EVENT = true or $HAP_EVENT = true or $BM_EVENT = true or $BN_Event = true or $BLOOD_EVENT = true or $FALL_EVENT = true or $CDI_EVENT = true or $SSI_EVENT = true or $UTI_EVENT = true or $CAUTI_EVENT = true or $CLABSI_EVENT = true or $MED_EVENT = true or $PU_EVENT = true or $SURG_EVENT = true or $VTE_EVENT = true or $OOI_EVENT = true %}"
        }
      ],
      "Default": "Collect and Upload"
    },
    "Q4": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q4 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q4_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q5"
    },
    "Q5": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q5 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q5_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Collect and Upload"
    },
    "Collect and Upload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:collectAndUpload:$LATEST",
        "Payload": {
          "R1": "{% $R1_response %}",
          "R2": "{% $R2_response %}",
          "Q1": "{% $Q1_response %}",
          "Q2": "{% $Q2_response %}",
          "Q3": "{% $Q3_response %}",
          "Q4": "{% $Q4_response %}",
          "Q5": "{% $Q5_response %}",
          "passed_data": "{% $passed_data %}",
          "algorithm": "Exit",
          "page-embeddings-file": "{% $embeddings_key %}"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "End": true
    },
    "Fail State": {
      "Type": "Fail",
      "Error": "$['Error']",
      "Cause": "$['Cause']"
    }
  }
}