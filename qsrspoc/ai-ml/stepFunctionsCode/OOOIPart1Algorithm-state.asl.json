{
  "StartAt": "Assign Vars",
  "QueryLanguage": "JSONata",
  "States": {
    "Assign Vars": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:assignVarsStepFunction:$LATEST",
        "Payload": "{% $states.input %}"
      },
      "Assign": {
        "prompts": "{% $states.result.Payload.prompts %}",
        "embeddings_key": "{% $states.result.Payload.embeddings_key %}",
        "all_page_text_file": "{% $states.result.Payload.all_page_text_file %}",
        "passed_data": "{% $states.result.Payload.passed_data %}",
        "algorithm": "{% $states.result.Payload.algorithm %}",
        "config_questions_key": "OOOIPart1AlgorithmQuestions",
        "OOI_EVENT": "{% false %}",
        "OO_OCCURENCE": "{% false %}",
        "RENAL_FAILURE": "{% false %}",
        "RENAL_FAILURE_G2": "{% false %}",
        "RENAL_FAILURE_G5": "{% false %}",
        "Q1_response": "",
        "Q2_response": "",
        "QOther2_response": "",
        "Q3_response": "",
        "Q4_response": "",
        "Q5_response": "",
        "Q6_response": "",
        "Q6a_response": "",
        "Q6b_response": "",
        "Q7_response": "",
        "Q8_response": "",
        "Q9_response": "",
        "Q10_response": "",
        "Q11_response": "",
        "Q12_response": ""
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Extract Data Pass"
    },
    "Extract Data Pass": {
      "Type": "Pass",
      "Assign": {
        "age": "{% $passed_data.AgeAtAdmission %}",
        "CVC": "{% $passed_data.CVC %}",
        "discharge_status": "{% $passed_data.DischargeStatus %}"
      },
      "Next": "Q1"
    },
    "Q1": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q1 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q1_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q1 Choice"
    },
    "Q1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q2",
          "Condition": "{% $Q1_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q7"
    },
    "Q2": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q2 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q2"
        }
      },
      "Assign": {
        "Q2_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q2 Incorrect Procedure Choice"
    },
    "Q2 Incorrect Procedure Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q3",
          "Condition": "{% $contains($Q2_response.Answer, 'incorrect non-operating room procedure') %}"
        }
      ],
      "Default": "Q2 Other Choice"
    },
    "Q2 Other Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "QOther2",
          "Condition": "{% $contains($Q2_response.Answer, 'other') %}"
        }
      ],
      "Default": "Q2 Final Choice"
    },
    "Q3": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q3 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q3"
        }
      },
      "Assign": {
        "Q3_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q2 Other Choice"
    },
    "Q2 Final Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q2 Pass",
          "Condition": "{% $contains($Q2_response.Answer, 'pneumothorax') or $contains($Q2_response.Answer, 'laceration') %}"
        }
      ],
      "Default": "Q4"
    },
    "Q2 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}"
      },
      "Next": "Q4"
    },
    "Q4": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q4 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q4_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q4 Choice"
    },
    "Q4 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q5",
          "Condition": "{% $Q4_response.Answer = 'yes' %}"
        }
      ],
      "Default": "RL1 Choice"
    },
    "Q5": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q5 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q5_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q5 Choice"
    },
    "Q5 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q5 Pass",
          "Condition": "{% $Q5_response.Answer = 'yes' %}"
        }
      ],
      "Default": "RL1 Choice"
    },
    "Q5 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}"
      },
      "Next": "RL1 Choice"
    },
    "RL1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6",
          "Condition": "{% $CVC %}"
        }
      ],
      "Default": "Q6a"
    },
    "Q6": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q6 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q6_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q6 Choice"
    },
    "Q6 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6 Pass",
          "Condition": "{% $Q6_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q6a"
    },
    "Q6 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}"
      },
      "Next": "Q6a"
    },
    "Q6a": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q6a %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q6a_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q6a Choice"
    },
    "Q6a Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6a Pass",
          "Condition": "{% $Q6a_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q7"
    },
    "Q6a Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}"
      },
      "Next": "RL2a Choice"
    },
    "RL2a Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6b",
          "Condition": "{% $discharge_status = 'died' %}"
        }
      ],
      "Default": "Q7"
    },
    "Q6b": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q6b %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q6b_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q6b Choice"
    },
    "Q6b Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6b Pass",
          "Condition": "{% $Q6b_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q7"
    },
    "Q6b Pass": {
      "Type": "Pass",
      "Assign": {
        "OO_DEATH": "{% true %}"
      },
      "Next": "Q7"
    },
    "Q7": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q7 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q7_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q7 Choice"
    },
    "Q7 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q8",
          "Condition": "{% $Q7_response.Answer = 'yes' %}"
        }
      ],
      "Default": "RL6 Choice"
    },
    "Q8": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q8 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q8_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q8 Choice"
    },
    "Q8 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "RL6 Choice",
          "Condition": "{% $Q8_response.Answer = \"can't tell\" %}"
        }
      ],
      "Default": "RL2 Choice"
    },
    "RL2 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q9",
          "Condition": "{% $number($Q8_response.Answer) > 2 %}"
        }
      ],
      "Default": "RL6 Choice"
    },
    "Q9": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q9 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q9_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q9 Choice"
    },
    "Q9 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "RL6 Choice",
          "Condition": "{% $Q9_response.Answer = \"can't tell\" %}"
        }
      ],
      "Default": "RL3 Choice"
    },
    "RL3 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "RL3 Pass",
          "Condition": "{% $number($Q9_response.Answer) <= 2 %}"
        }
      ],
      "Default": "RL6 Choice"
    },
    "RL3 Pass": {
      "Type": "Pass",
      "Assign": {
        "RENAL_FAILURE": "{% true %}"
      },
      "Next": "RL5 Choice"
    },
    "RL5 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q10",
          "Condition": "{% $number($Q8_response.Answer) <= 5 %}"
        }
      ],
      "Default": "RL5 Pass"
    },
    "RL5 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}",
        "RENAL_FAILURE_G5": "{% true %}"
      },
      "Next": "RL6 Choice"
    },
    "Q10": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q10 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q10_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "RL4"
    },
    "RL4": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.RL4 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "RL4_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q10 Choice"
    },
    "Q10 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "RL6 Choice",
          "Condition": "{% $Q10_response.Answer = \"can't tell\" %}"
        }
      ],
      "Default": "RL4 Choice"
    },
    "RL4 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "RL4 Pass",
          "Condition": "{% $number($Q10_response.Answer) > 2 %}"
        }
      ],
      "Default": "RL6 Choice"
    },
    "RL4 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}",
        "RENAL_FAILURE_G2": "{% true %}"
      },
      "Next": "RL6 Choice"
    },
    "RL6 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q11",
          "Condition": "{% $number($age) < 18 %}"
        }
      ],
      "Default": "Set New Data to Pass"
    },
    "Q11": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q11 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q11_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q11 Choice"
    },
    "Q11 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q12",
          "Condition": "{% $Q11_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Set New Data to Pass"
    },
    "Q12": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q12 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q12_response": "{% $parse($states.result.Payload) %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "Next": "Q12 Choice"
    },
    "Q12 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Set New Data to Pass",
          "Condition": "{% $Q12_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q12 Pass"
    },
    "Q12 Pass": {
      "Type": "Pass",
      "Assign": {
        "OOI_EVENT": "{% true %}"
      },
      "Next": "Set New Data to Pass"
    },
    "Set New Data to Pass": {
      "Type": "Pass",
      "Assign": {
        "passed_data": "{% $merge([$passed_data, {\"OOI_EVENT\": $OOI_EVENT}]) %}"
      },
      "Next": "Collect and Upload"
    },
    "Collect and Upload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:collectAndUpload:$LATEST",
        "Payload": {
          "OOI_EVENT": "{% $OOI_EVENT %}",
          "OO_OCCURENCE": "{% $OO_OCCURENCE %}",
          "RENAL_FAILURE": "{% $RENAL_FAILURE %}",
          "RENAL_FAILURE_G2": "{% $RENAL_FAILURE_G2 %}",
          "RENAL_FAILURE_G5": "{% $RENAL_FAILURE_G5 %}",
          "Q1": "{% $Q1_response %}",
          "Q2": "{% $Q2_response %}",
          "QOther2": "{% $QOther2_response %}",
          "Q3": "{% $Q3_response %}",
          "Q4": "{% $Q4_response %}",
          "Q5": "{% $Q5_response %}",
          "Q6": "{% $Q6_response %}",
          "Q6a": "{% $Q6a_response %}",
          "Q6b": "{% $Q6b_response %}",
          "Q7": "{% $Q7_response %}",
          "Q8": "{% $Q8_response %}",
          "Q9": "{% $Q9_response %}",
          "Q10": "{% $Q10_response %}",
          "Q11": "{% $Q11_response %}",
          "Q12": "{% $Q12_response %}",
          "passed_data": "{% $passed_data %}",
          "algorithm": "OOOI-Part1",
          "page-embeddings-file": "{% $embeddings_key %}"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "End": true
    },
    "Fail State": {
      "Type": "Fail",
      "Error": "$['Error']",
      "Cause": "$['Cause']"
    },
    "QOther2": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.QOther2 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "QOther2_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "QOther2 Pass",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "QOther2 Pass": {
      "Type": "Pass",
      "Assign": {
        "OO_OCCURENCE": "{% true %}"
      },
      "Next": "Q2 Final Choice"
    }
  }
}