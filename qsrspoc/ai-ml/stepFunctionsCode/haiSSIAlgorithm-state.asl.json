{
  "StartAt": "Assign Vars",
  "QueryLanguage": "JSONata",
  "States": {
    "Assign Vars": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:assignVarsStepFunction:$LATEST",
        "Payload": "{% $states.input %}"
      },
      "Assign": {
        "prompts": "{% $states.result.Payload.prompts %}",
        "embeddings_key": "{% $states.result.Payload.embeddings_key %}",
        "all_page_text_file": "{% $states.result.Payload.all_page_text_file %}",
        "passed_data": "{% $states.result.Payload.passed_data %}",
        "algorithm": "{% $states.result.Payload.algorithm %}",
        "config_questions_key": "haiSSIAlgorithmQuestions",
        "SSI_EVENT": "{% false %}",
        "EQ1_response": "",
        "EQ2_response": "",
        "Q1_response": "",
        "Q2_response": "",
        "Q3_response": "",
        "Q4_response": "",
        "Q5_response": "",
        "Q6_response": "",
        "Q7_response": "",
        "Q8_response": "",
        "Q9_response": "",
        "Q10_response": "",
        "Q11_response": "",
        "Q12_response": "",
        "Q13_response": ""
      },
      "Next": "Extract Data Pass",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Extract Data Pass": {
      "Type": "Pass",
      "Assign": {
        "or_procedure": "{% $passed_data.OR_procedure %}"
      },
      "Next": "EQR1 Choice"
    },
    "EQR1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "EQ1",
          "Condition": "{% $or_procedure %}"
        }
      ],
      "Default": "Set New Data to Pass"
    },
    "EQ1": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.EQ1 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "EQ1_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "EQ1 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "EQ1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "EQ2",
          "Condition": "{% $EQ1_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Set New Data to Pass"
    },
    "EQ2": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.EQ2 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "EQ2"
        }
      },
      "Assign": {
        "EQ2_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "EQ2 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "EQ2 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Set New Data to Pass",
          "Condition": "{% $EQ2_response.Answer = 'none' or $EQ2_response.Answer = \"can't tell\" %}"
        }
      ],
      "Default": "EQ2 Infection Location Pass"
    },
    "EQ2 Infection Location Pass": {
      "Type": "Pass",
      "Assign": {
        "SKIN_SUBCUTANEOUS_ONLY": "{% $contains($EQ2_response.Answer, 'skin and subcutaneous tissue infection without deeper involvement') %}",
        "DEEP_SOFT_TISSUE": "{% $contains($EQ2_response.Answer, 'infection of deep soft tissue') %}",
        "UNSPECIFIED_DEPTH": "{% $contains($EQ2_response.Answer, 'infection without mention of superficiality') %}",
        "ORGAN_SPACE": "{% $contains($EQ2_response.Answer, 'infection within organ space') %}"
      },
      "Next": "EQ2 Skin Subcutaneous Choice"
    },
    "EQ2 Skin Subcutaneous Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q1",
          "Condition": "{% $SKIN_SUBCUTANEOUS_ONLY = true %}"
        },
        {
          "Next": "EQ2 Deep Soft Tissue Choice",
          "Condition": "{% $SKIN_SUBCUTANEOUS_ONLY = false %}"
        }
      ]
    },
    "Q1": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q1 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q1"
        }
      },
      "Assign": {
        "Q1_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q1 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q1 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q5",
          "Condition": "{% $contains($Q1_response.Answer, 'an incision was opened or drained') %}"
        }
      ],
      "Default": "EQ2 Deep Soft Tissue Choice"
    },
    "Q5": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q5 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q5_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q5 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q5 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q6",
          "Condition": "{% $Q5_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q7"
    },
    "Q6": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q6 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q6_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q6 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q6 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q7",
          "Condition": "{% $Q6_response.Answer = 'yes' %}"
        }
      ],
      "Default": "EQ2 Deep Soft Tissue Choice"
    },
    "EQ2 Deep Soft Tissue Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q2",
          "Condition": "{% $DEEP_SOFT_TISSUE = true %}"
        },
        {
          "Next": "EQ2 Unspecified Depth Choice",
          "Condition": "{% $DEEP_SOFT_TISSUE = false %}"
        }
      ]
    },
    "EQ2 Unspecified Depth Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Condition": "{% $UNSPECIFIED_DEPTH = true %}",
          "Next": "Q3"
        },
        {
          "Next": "EQ2 Organ Space Choice",
          "Condition": "{% $UNSPECIFIED_DEPTH = false %}"
        }
      ]
    },
    "Q3": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q3 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q3"
        }
      },
      "Assign": {
        "Q3_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q3 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q3 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q11",
          "Condition": "{% $contains($Q3_response.Answer, 'incision, without mention of superficial or deep, that is opened') %}"
        }
      ],
      "Default": "EQ2 Organ Space Choice"
    },
    "Q11": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q11 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q11_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q11 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q11 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q12",
          "Condition": "{% $Q11_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q13"
    },
    "Q12": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q12 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q12_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q12 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q12 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q13",
          "Condition": "{% $Q12_response.Answer = 'yes' %}"
        }
      ],
      "Default": "EQ2 Organ Space Choice"
    },
    "Q2": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q2 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q2"
        }
      },
      "Assign": {
        "Q2_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q2 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q2 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q8",
          "Condition": "{% $contains($Q2_response.Answer, 'a deep incision that dehisces, is opened, or is percutaneously aspirated') %}"
        }
      ],
      "Default": "EQ2 Unspecified Depth Choice"
    },
    "Q8": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q8 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q8_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q8 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q8 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q9",
          "Condition": "{% $Q8_response.Answer = 'yes' %}"
        }
      ],
      "Default": "Q10"
    },
    "Q9": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q9 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}"
        }
      },
      "Assign": {
        "Q9_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q9 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q9 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q10",
          "Condition": "{% $Q9_response.Answer = 'yes' %}"
        }
      ],
      "Default": "EQ2 Unspecified Depth Choice"
    },
    "Q7": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q7 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q7"
        }
      },
      "Assign": {
        "Q7_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q7 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q7 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "EQ2 Deep Soft Tissue Choice",
          "Condition": "{% $Q7_response.Answer = 'none' or $Q7_response.Answer = \"can't tell\" %}"
        },
        {
          "Next": "Q7 Pass",
          "Condition": "{% $contains($Q7_response.Answer, 'pain or tenderness') or $contains($Q7_response.Answer, 'localized swelling') or $contains($Q7_response.Answer, 'redness or heat') %}"
        }
      ],
      "Default": "EQ2 Deep Soft Tissue Choice"
    },
    "Q7 Pass": {
      "Type": "Pass",
      "Assign": {
        "SSI_EVENT": "{% true %}"
      },
      "Next": "EQ2 Deep Soft Tissue Choice"
    },
    "EQ2 Organ Space Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Q4",
          "Condition": "{% $ORGAN_SPACE = true %}"
        },
        {
          "Next": "Set New Data to Pass",
          "Condition": "{% $ORGAN_SPACE = false %}"
        }
      ]
    },
    "Q4": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q4 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q4"
        }
      },
      "Assign": {
        "Q4_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Set New Data to Pass",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q10": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q10 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q10"
        }
      },
      "Assign": {
        "Q10_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q10 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q10 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "EQ2 Unspecified Depth Choice",
          "Condition": "{% $Q10_response.Answer = 'none' or $Q10_response.Answer = \"can't tell\" %}"
        },
        {
          "Next": "Q10 Pass",
          "Condition": "{% $contains($Q10_response.Answer, /fever \\(> 38 degrees C\\)/) or $contains($Q10_response.Answer, 'localized pain or tenderness') %}"
        }
      ],
      "Default": "EQ2 Unspecified Depth Choice"
    },
    "Q10 Pass": {
      "Type": "Pass",
      "Assign": {
        "SSI_EVENT": "{% true %}"
      },
      "Next": "EQ2 Unspecified Depth Choice"
    },
    "Q13": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:answerQuestion:$LATEST",
        "Payload": {
          "prompt": "{% $prompts.Q13 %}",
          "all_page_text_file": "{% $all_page_text_file %}",
          "embeddings_key": "{% $embeddings_key %}",
          "config_questions_key": "{% $config_questions_key %}",
          "qnum": "Q13"
        }
      },
      "Assign": {
        "Q13_response": "{% $parse($states.result.Payload) %}"
      },
      "Next": "Q13 Choice",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120
    },
    "Q13 Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "EQ2 Organ Space Choice",
          "Condition": "{% $Q13_response.Answer = 'no' or $Q13_response.Answer = \"can't tell\" %}"
        },
        {
          "Next": "Q13 Pass",
          "Condition": "{% $contains($Q13_response.Answer, /fever \\(> 38 degrees C\\)Pain or tenderness/) or $contains($Q13_response.Answer, 'localized swelling') or $contains($Q13_response.Answer, 'redness or heat') %}"
        }
      ],
      "Default": "EQ2 Organ Space Choice"
    },
    "Q13 Pass": {
      "Type": "Pass",
      "Assign": {
        "SSI_EVENT": "{% true %}"
      },
      "Next": "EQ2 Organ Space Choice"
    },
    "Set New Data to Pass": {
      "Type": "Pass",
      "Assign": {
        "passed_data": "{% $merge([$passed_data, {\"SSI_EVENT\": $SSI_EVENT}]) %}"
      },
      "Next": "Collect and Upload"
    },
    "Collect and Upload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-1:864981749938:function:collectAndUpload:$LATEST",
        "Payload": {
          "SSI_EVENT": "{% $SSI_EVENT %}",
          "EQ1": "{% $EQ1_response %}",
          "EQ2": "{% $EQ2_response %}",
          "Q1": "{% $Q1_response %}",
          "Q2": "{% $Q2_response %}",
          "Q3": "{% $Q3_response %}",
          "Q4": "{% $Q4_response %}",
          "Q5": "{% $Q5_response %}",
          "Q6": "{% $Q6_response %}",
          "Q7": "{% $Q7_response %}",
          "Q8": "{% $Q8_response %}",
          "Q9": "{% $Q9_response %}",
          "Q10": "{% $Q10_response %}",
          "Q11": "{% $Q11_response %}",
          "Q12": "{% $Q12_response %}",
          "Q13": "{% $Q13_response %}",
          "passed_data": "{% $passed_data %}",
          "algorithm": "HAI-SSI",
          "page-embeddings-file": "{% $embeddings_key %}"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 1,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail State"
        }
      ],
      "TimeoutSeconds": 120,
      "End": true
    },
    "Fail State": {
      "Type": "Fail",
      "Error": "$['Error']",
      "Cause": "$['Cause']"
    }
  }
}